name: Build, run tests and lint
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-go:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Test
      run: go test -v ./... -ldflags "-X github.com/verder-helpen/auth-digid.testdb=postgres://postgres:postgres@localhost:5432/postgres"

  format-go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Format
      run: gofmt -d .

  build-go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: go build -v ./...

  vet-go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Vet
      run: go vet -v ./...

  build-rust:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-jwt
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git
        key: build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: build-
    - run: cargo build --all-features --verbose

  test-rust:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-jwt
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git
        key: test-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: test-
    - run: cargo test --all-features --verbose

  format-rust:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-jwt
    steps:
    - uses: actions/checkout@v3
    - run: |
        rustup toolchain install nightly
        rustup default nightly
        rustup component add rustfmt
    - run: cargo fmt -- --check

  clippy-rust:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-jwt
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git
        key: clippy-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: clippy-
    - run: cargo clippy --all-features -- -D warnings

  udeps-rust:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-jwt
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git
        key: udeps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: udeps-

    - run: |
        cargo install cargo-udeps
        rustup toolchain install nightly
        rustup default nightly
    - run: cargo udeps --all-features --all-targets
